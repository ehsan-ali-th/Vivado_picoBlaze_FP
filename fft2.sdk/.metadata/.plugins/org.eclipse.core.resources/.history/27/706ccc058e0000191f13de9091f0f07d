/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xgpio.h"

#define LED_CHANNEL 	1
#define LED_DELAY     	30000000

XGpio Gpio; /* The Instance of the GPIO Driver */



int main()
{
    init_platform();

    int Status;
	volatile int Delay;

	/* Initialize the GPIO driver */
	Status = XGpio_Initialize(&Gpio, XPAR_GPIO_0_DEVICE_ID);
	if (Status != XST_SUCCESS) {
		xil_printf("Gpio Initialization Failed\r\n");
		return XST_FAILURE;
	}

	/* Set the direction for all signals as inputs except the LED output */
	//XGpio_SetDataDirection(&Gpio, LED_CHANNEL, 0x0);

	/* Loop forever blinking the LED */

	for (int i = 0; i < 256; i = i + 1) {
		u32 read_mem = Xil_In32 (XPAR_BRAM_0_BASEADDR + i);
		xil_printf ("i == %i , %x\n\r", i, read_mem);
	}

	//while (1) {
	//	xil_printf("Hello World");



    	/* Set the LED to High */
    //	XGpio_DiscreteWrite(&Gpio, LED_CHANNEL, 0xF);

		/* Wait a small amount of time so the LED is visible */
		//for (Delay = 0; Delay < LED_DELAY; Delay++);

		/* Clear the LED bit */
		//XGpio_DiscreteWrite(&Gpio, LED_CHANNEL, 0x0);

		/* Wait a small amount of time so the LED is visible */
		//for (Delay = 0; Delay < LED_DELAY; Delay++);
	//}

	xil_printf("Successfully ran Gpio Example\r\n");
	return XST_SUCCESS;


    cleanup_platform();
    return 0;
}
